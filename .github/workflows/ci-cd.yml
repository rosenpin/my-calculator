name: CI-CD

on:
  push:
    branches:
      - development
      - staging
      - main
  pull_request:
    branches:
      - development
      - staging
      - main

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements-dev.txt

      - name: Run lint
        run: flake8 app

      - name: Run tests
        run: pytest app/tests

  deploy:
    needs: lint-and-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/development' || github.ref == 'refs/heads/staging' || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || github.ref == 'refs/heads/staging' && 'staging' || 'development' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3 botocore docker

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Write SSH key
        run: |
          mkdir -p ~/.ssh
          printf "%s\n" "${{ secrets.ANSIBLE_PRIVATE_KEY }}" > ~/.ssh/ansible.pem
          chmod 600 ~/.ssh/ansible.pem
        shell: bash

      - name: Determine target environment
        id: target
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/development" ]]; then
            echo "env=development" >> "$GITHUB_OUTPUT"
          elif [[ "${GITHUB_REF}" == "refs/heads/staging" ]]; then
            echo "env=staging" >> "$GITHUB_OUTPUT"
          else
            echo "env=production" >> "$GITHUB_OUTPUT"
          fi

      - name: Deploy with Ansible
        uses: dawidd6/action-ansible-playbook@v2
        env:
          ANSIBLE_HOST_KEY_CHECKING: "false"
          ANSIBLE_PRIVATE_KEY_FILE: /home/runner/.ssh/ansible.pem
        with:
          playbook: deploy_app.yml
          inventory: aws_ec2.yml
          collections: |
            amazon.aws
            community.docker
          options: |
            --extra-vars target_env=${{ steps.target.outputs.env }}
            --extra-vars app_version=${{ github.sha }}
